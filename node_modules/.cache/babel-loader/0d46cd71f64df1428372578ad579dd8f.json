{"ast":null,"code":"var _jsxFileName = \"/Users/chetna/Desktop/Site/my-app/choco-corp/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router, Route, IndexRoute, hashHistory, browserHistory } from 'react-router';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport { I18n, I18nextProvider } from 'react-i18next';\nimport i18n from './translation';\nimport { syncHistoryWithStore } from \"react-router-redux\";\nimport configureStore from \"./store/configureStore\";\nimport * as actions from './actions/index';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\nvar store = configureStore(); // Create an enhanced history that syncs navigation events with the store\n\nvar history = syncHistoryWithStore(browserHistory, store);\n\nfunction Authentication(nextState, replace) {\n  var isAuthenticated = true; // isAuthenticated = localStorage.getItem(\"authData\") ? true : false;\n\n  if (!isAuthenticated) {\n    replace({\n      pathname: \"/\",\n      state: {\n        nextPathname: nextState.location.pathname\n      }\n    });\n  }\n}\n\nReactDOM.render(React.createElement(I18nextProvider, {\n  i18n: i18n,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, React.createElement(Router, {\n  history: hashHistory,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, React.createElement(IndexRoute, {\n  component: LoginPage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"login\",\n  component: LoginPage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/logout\",\n  component: Logout,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"app\",\n  component: Layout,\n  onEnter: Authentication,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"start\",\n  component: HomePage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n})))))), document.getElementById('app'));","map":{"version":3,"sources":["/Users/chetna/Desktop/Site/my-app/choco-corp/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Router","Route","IndexRoute","hashHistory","browserHistory","Provider","createStore","applyMiddleware","thunk","reducers","I18n","I18nextProvider","i18n","syncHistoryWithStore","configureStore","actions","render","document","getElementById","unregister","store","history","Authentication","nextState","replace","isAuthenticated","pathname","state","nextPathname","location","LoginPage","Logout","Layout","HomePage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,UAAvB,EAAmCC,WAAnC,EAA+CC,cAA/C,QAAoE,cAApE;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,IAAT,EAAeC,eAAf,QAAqC,eAArC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,oBAAT,QAAqC,oBAArC;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AAEAlB,QAAQ,CAACmB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAnB,aAAa,CAACoB,UAAd;AAKA,IAAMC,KAAK,GAAGN,cAAc,EAA5B,C,CAEA;;AACA,IAAMO,OAAO,GAAGR,oBAAoB,CAACT,cAAD,EAAiBgB,KAAjB,CAApC;;AAOA,SAASE,cAAT,CAAwBC,SAAxB,EAAmCC,OAAnC,EAA4C;AACxC,MAAMC,eAAe,GAAG,IAAxB,CADwC,CAEvC;;AACC,MAAI,CAACA,eAAL,EAAsB;AACpBD,IAAAA,OAAO,CAAC;AACNE,MAAAA,QAAQ,EAAE,GADJ;AAENC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAEL,SAAS,CAACM,QAAV,CAAmBH;AAAnC;AAFD,KAAD,CAAP;AAID;AACN;;AAED7B,QAAQ,CAACmB,MAAT,CACE,oBAAC,eAAD;AAAiB,EAAA,IAAI,EAAEJ,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEQ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAEjB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,UAAD;AAAY,EAAA,SAAS,EAAE2B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,OAAZ;AAAoB,EAAA,SAAS,EAAEA,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAII,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,SAAZ;AAAsB,EAAA,SAAS,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,EAKI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,KAAZ;AAAmB,EAAA,SAAS,EAAEC,MAA9B;AAAsC,EAAA,OAAO,EAAEV,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,OAAZ;AAAoB,EAAA,SAAS,EAAEW,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CALJ,CADJ,CADF,CADF,CADF,EAgBMhB,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAhBN","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Router, Route, IndexRoute, hashHistory,browserHistory} from 'react-router';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport { I18n ,I18nextProvider} from 'react-i18next';\nimport i18n from './translation';\nimport { syncHistoryWithStore } from \"react-router-redux\";\nimport configureStore from \"./store/configureStore\";\n\nimport * as actions from './actions/index';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\nconst store = configureStore();\n\n// Create an enhanced history that syncs navigation events with the store\nconst history = syncHistoryWithStore(browserHistory, store);\n\n\n\n\n\n\nfunction Authentication(nextState, replace) {\n    const isAuthenticated = true;\n     // isAuthenticated = localStorage.getItem(\"authData\") ? true : false;\n      if (!isAuthenticated) {\n        replace({\n          pathname: \"/\",\n          state: { nextPathname: nextState.location.pathname }\n        });\n      }\n}\n\nReactDOM.render(\n  <I18nextProvider i18n={i18n}>\n    <Provider store={store}>\n      <Router history={hashHistory}>\n          <Route path=\"/\" >\n              <IndexRoute component={LoginPage} />\n              <Route path=\"login\" component={LoginPage} />\n              \n              <Route path=\"/logout\" component={Logout} />\n              <Route path=\"app\"  component={Layout} onEnter={Authentication}>\n                  <Route path=\"start\" component={HomePage} />\n              </Route>\n          </Route>\n      </Router>\n   </Provider>\n </I18nextProvider>\n    , document.getElementById('app'));\n\n\n\n"]},"metadata":{},"sourceType":"module"}