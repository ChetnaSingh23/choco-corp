{"ast":null,"code":"var _jsxFileName = \"/Users/chetna/Desktop/Site/my-app/choco-corp/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router, Route, hashHistory } from 'react-router';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport { syncHistoryWithStore } from \"react-router-redux\";\nimport configureStore from \"./store/configureStore\";\nimport * as actions from './actions/index'; //components\n\nimport HomePage from './components/HomePage';\nvar store = configureStore(); // Create an enhanced history that syncs navigation events with the store\n\nvar history = syncHistoryWithStore(store);\n\nfunction Authentication(nextState, replace) {\n  var isAuthenticated = true; // isAuthenticated = localStorage.getItem(\"authData\") ? true : false;\n\n  if (!isAuthenticated) {\n    replace({\n      pathname: \"/\",\n      state: {\n        nextPathname: nextState.location.pathname\n      }\n    });\n  }\n}\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"login\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/logout\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n})))), document.getElementById('app')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/chetna/Desktop/Site/my-app/choco-corp/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Router","Route","hashHistory","Provider","createStore","applyMiddleware","thunk","reducers","syncHistoryWithStore","configureStore","actions","HomePage","store","history","Authentication","nextState","replace","isAuthenticated","pathname","state","nextPathname","location","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,WAAvB,QAAyC,cAAzC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,oBAAT,QAAqC,oBAArC;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB,C,CAIA;;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AAGA,IAAMC,KAAK,GAAGH,cAAc,EAA5B,C,CAEA;;AACA,IAAMI,OAAO,GAAGL,oBAAoB,CAACI,KAAD,CAApC;;AAOA,SAASE,cAAT,CAAwBC,SAAxB,EAAmCC,OAAnC,EAA4C;AACxC,MAAMC,eAAe,GAAG,IAAxB,CADwC,CAEvC;;AACC,MAAI,CAACA,eAAL,EAAsB;AACpBD,IAAAA,OAAO,CAAC;AACNE,MAAAA,QAAQ,EAAE,GADJ;AAENC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAEL,SAAS,CAACM,QAAV,CAAmBH;AAAnC;AAFD,KAAD,CAAP;AAID;AACN;;AAEDrB,QAAQ,CAACyB,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,GAAZ;AAAgB,EAAA,SAAS,EAAEd,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,OAAZ;AAAoB,EAAA,SAAS,EAAEA,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAII,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,SAAZ;AAAsB,EAAA,SAAS,EAAEA,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,CADJ,CADF,CADJ,EAWMyB,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAXN,E,CAeA;AACA;AACA;;AACAzB,aAAa,CAAC0B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Router, Route, hashHistory} from 'react-router';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport { syncHistoryWithStore } from \"react-router-redux\";\nimport configureStore from \"./store/configureStore\";\n\nimport * as actions from './actions/index';\n\n\n\n//components\n\nimport HomePage from './components/HomePage'\n\n\nconst store = configureStore();\n\n// Create an enhanced history that syncs navigation events with the store\nconst history = syncHistoryWithStore(store);\n\n\n\n\n\n\nfunction Authentication(nextState, replace) {\n    const isAuthenticated = true;\n     // isAuthenticated = localStorage.getItem(\"authData\") ? true : false;\n      if (!isAuthenticated) {\n        replace({\n          pathname: \"/\",\n          state: { nextPathname: nextState.location.pathname }\n        });\n      }\n}\n\nReactDOM.render(\n    <Provider store={store}>\n      <Router>\n          <Route path=\"/\" >\n              <Route path='/' component={App} />\n              <Route path=\"login\" component={App} />\n              \n              <Route path=\"/logout\" component={App} />\n          </Route>\n      </Router>\n   </Provider>\n    , document.getElementById('app'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"]},"metadata":{},"sourceType":"module"}